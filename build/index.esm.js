function r(r){const n={},t=r?.suppress??!1;return{on:()=>new Proxy({},{get(r,o,e){if("string"!=typeof o)return;const i=o;return r=>{const o={id:Symbol(),func:r};return n[i]||(n[i]=[]),n[i].push(o),{off:()=>{const r=n[i];if(r){const n=r.findIndex((r=>r.id===o.id));-1!==n&&r.splice(n,1)}},fire:r=>{try{o.func(r)}catch(r){if(!t)throw r;console.error(`Error in manually firing listener for event "${String(i)}":`,r)}}}}}}),emit:()=>new Proxy({},{get(r,o,e){if("string"!=typeof o)return;const i=o;return r=>{const o=n[i];if(o)for(const n of[...o])try{n.func(r)}catch(r){if(!t)throw r;console.error(`Error in listener for event "${String(i)}":`,r)}}}})}}export{r as createBus};
//# sourceMappingURL=index.esm.js.map
